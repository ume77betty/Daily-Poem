{"version":3,"sources":["components/Poem.js","components/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Poem","poemTitle","poemTitleURL","poet","poetURL","poemContent","hide","setHide","setError","useState","split","setSplit","useEffect","str","includes","otherStr","replaceAll","tempSplit","Object","keys","map","key","splitPoem","className","style","display","onClick","href","target","rel","sentence","index","HomePage","setPoemTitle","setPoemTitleURL","setPoet","setPoetURL","setPoemContent","Math","floor","random","randomNum","error","bgColor","getAPI","a","fetch","method","then","response","json","data","title","url","name","content","catch","console","log","backgroundImage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8b554f5.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst Poem = ({\r\n  poemTitle,\r\n  poemTitleURL,\r\n  poet,\r\n  poetURL,\r\n  poemContent,\r\n  hide,\r\n  setHide,\r\n  setError }) => {\r\n\r\n  const [split, setSplit] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const splitPoem = () => {\r\n      let str = poemContent.split('\\n');\r\n      if (poemContent.includes(`&amp;`)) {\r\n        let withAndContent = poemContent.replaceAll('&amp;', '&');\r\n        let otherStr = withAndContent.split('\\n');\r\n        let tempSplit = Object.keys(otherStr).map((key) => [otherStr[key]]);\r\n        setSplit(tempSplit);\r\n      } else {\r\n        let tempSplit = Object.keys(str).map((key) => [str[key]]);\r\n        setSplit(tempSplit);\r\n      }\r\n    }\r\n    splitPoem();\r\n  }, [poemContent, hide]);\r\n\r\n\r\n\r\n\r\n  const backForward = () => {\r\n    setHide(false);\r\n    setError(false);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"poem\" style={hide ? {} : { display: `none` }}>\r\n        <button className=\"btn btn__forward\" onClick={backForward}>&lt; Back to HomePage</button>\r\n        <h1 className=\"poem__header\"><a href={poemTitleURL} className=\"poem__url\" target=\"_blank\" rel=\"noreferrer noopener\">{poemTitle}</a></h1>\r\n        <h2 className=\"poem__poet\"><a href={poetURL} className=\"poem__url\" target=\"_blank\" rel=\"noreferrer noopener\">{poet}</a></h2>\r\n        <ul className=\"poem__content\">\r\n          {split.map((sentence, index) => {\r\n            return (\r\n              <li key={index}>{sentence}</li>\r\n            )\r\n          })}\r\n        </ul>\r\n        <p className=\"paragraph paragraph--info\">You can click title or poet<br />to get more information.</p>\r\n        <p className=\"paragraph paragraph--API\">API from <a href=\"https://poemist.github.io/poemist-apidoc/#introduction\" className=\"poem__url\" target=\"_blank\" rel=\"noreferrer noopener\">Poemist API</a></p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Poem;","import { useState } from 'react';\r\nimport Poem from './Poem';\r\n\r\nconst HomePage = () => {\r\n\r\n  const [poemTitle, setPoemTitle] = useState(``);\r\n  const [poemTitleURL, setPoemTitleURL] = useState(``);\r\n  const [poet, setPoet] = useState(``);\r\n  const [poetURL, setPoetURL] = useState();\r\n  const [poemContent, setPoemContent] = useState(``);\r\n  const [randomNum, setRandomNum] = useState(Math.floor(Math.random() * 11));\r\n  const [hide, setHide] = useState();\r\n  const [error, setError] = useState();\r\n\r\n\r\n\r\n  const bgColor = [\r\n    ['#774c60', '#eacdc2'],\r\n    ['#ffac81', '#cdeac0'],\r\n    ['#b26e63', '#cec075'],\r\n    ['#A5A58D', '#FFE8D6'],\r\n    ['#c5dedd', '#fde2e4'],\r\n    ['#7d4f50', '#f9eae1'],\r\n    ['#136f63', '#ffcb69'],\r\n    ['#b0d0d3', '#f7af9d'],\r\n    ['#ffcad4', '#b8bedd'],\r\n    ['#52796f', '#bee3db'],\r\n    ['#89b0ae', '#d9d9d9']\r\n  ]\r\n\r\n  const getAPI = async () => {\r\n    await fetch('https://www.poemist.com/api/v1/randompoems', {\r\n      method: 'GET'\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setPoemTitle(data[0].title);\r\n        setPoemTitleURL(data[0].url)\r\n        setPoet(data[0].poet.name);\r\n        setPoetURL(data[0].poet.url);\r\n        setPoemContent(data[0].content);\r\n        setHide(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setHide(true);\r\n        setError(true);\r\n      })\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"wrapper\" style={{ backgroundImage: `linear-gradient(to right bottom, ${bgColor[randomNum][0]} , ${bgColor[randomNum][1]})` }}>\r\n\r\n      <div className=\"header\" style={hide ? { display: `none` } : {}}>\r\n        <h1 className=\"header__welcome\">Welcome</h1>\r\n        <h2 className=\"header__greeting\">Click the botton to get your daily poem.</h2>\r\n        <button className=\"btn btn__getAPI\" onClick={getAPI}>Get daily poem</button>\r\n        <p className=\"header__copyright\">copyright by ya-ping</p>\r\n      </div>\r\n      <div className=\"error\" style={error ? { display: `block` } : { display: `none` }}>OOPS! It seems there's some error, please try again later.</div>\r\n\r\n      <Poem\r\n        poemTitle={poemTitle}\r\n        poemTitleURL={poemTitleURL}\r\n        poet={poet}\r\n        poetURL={poetURL}\r\n        poemContent={poemContent}\r\n        hide={hide}\r\n        setHide={setHide}\r\n        setError={setError}\r\n      />\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default HomePage;","import HomePage from \"./components/HomePage\";\nimport './SASS/App.scss'\n\nfunction App() {\n\n\n  return (\n    <HomePage />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}